"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/employees";
exports.ids = ["pages/api/employees"];
exports.modules = {

/***/ "(api)/./src/pages/api/employees/index.ts":
/*!******************************************!*\
  !*** ./src/pages/api/employees/index.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\nasync function handler(req, res) {\n    try {\n        // Get the API URL from environment variable or use default\n        const nestJsApiUrl = \"http://localhost:4000/api\" || 0;\n        if (req.method === \"GET\") {\n            // Forward the GET request to NestJS API with any query params\n            const queryString = new URLSearchParams(req.query).toString();\n            const apiUrl = `${nestJsApiUrl}/employees${queryString ? `?${queryString}` : \"\"}`;\n            const response = await fetch(apiUrl, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    ...req.headers.authorization ? {\n                        \"Authorization\": req.headers.authorization\n                    } : {}\n                }\n            });\n            const data = await response.json();\n            return res.status(response.status).json(data);\n        } else if (req.method === \"POST\") {\n            // Forward the POST request to NestJS API\n            const response1 = await fetch(`${nestJsApiUrl}/employees`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    ...req.headers.authorization ? {\n                        \"Authorization\": req.headers.authorization\n                    } : {}\n                },\n                body: JSON.stringify(req.body)\n            });\n            const data1 = await response1.json();\n            return res.status(response1.status).json(data1);\n        } else {\n            res.setHeader(\"Allow\", [\n                \"GET\",\n                \"POST\"\n            ]);\n            return res.status(405).end(`Method ${req.method} Not Allowed`);\n        }\n    } catch (error) {\n        console.error(\"Error connecting to NestJS API:\", error);\n        return res.status(500).json({\n            message: \"Internal server error connecting to API\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL2VtcGxveWVlcy9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBRWUsZUFBZUEsT0FBTyxDQUFDQyxHQUFtQixFQUFFQyxHQUFvQixFQUFFO0lBQy9FLElBQUk7UUFDRiwyREFBMkQ7UUFDM0QsTUFBTUMsWUFBWSxHQUFHQywyQkFBK0IsSUFBSSxDQUEyQjtRQUVuRixJQUFJSCxHQUFHLENBQUNNLE1BQU0sS0FBSyxLQUFLLEVBQUU7WUFDeEIsOERBQThEO1lBQzlELE1BQU1DLFdBQVcsR0FBRyxJQUFJQyxlQUFlLENBQUNSLEdBQUcsQ0FBQ1MsS0FBSyxDQUEyQixDQUFDQyxRQUFRLEVBQUU7WUFDdkYsTUFBTUMsTUFBTSxHQUFHLENBQUMsRUFBRVQsWUFBWSxDQUFDLFVBQVUsRUFBRUssV0FBVyxHQUFHLENBQUMsQ0FBQyxFQUFFQSxXQUFXLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO1lBRWpGLE1BQU1LLFFBQVEsR0FBRyxNQUFNQyxLQUFLLENBQUNGLE1BQU0sRUFBRTtnQkFDbkNMLE1BQU0sRUFBRSxLQUFLO2dCQUNiUSxPQUFPLEVBQUU7b0JBQ1AsY0FBYyxFQUFFLGtCQUFrQjtvQkFDbEMsR0FBSWQsR0FBRyxDQUFDYyxPQUFPLENBQUNDLGFBQWEsR0FBRzt3QkFBRSxlQUFlLEVBQUVmLEdBQUcsQ0FBQ2MsT0FBTyxDQUFDQyxhQUFhO3FCQUFZLEdBQUcsRUFBRTtpQkFDOUY7YUFDRixDQUFDO1lBRUYsTUFBTUMsSUFBSSxHQUFHLE1BQU1KLFFBQVEsQ0FBQ0ssSUFBSSxFQUFFO1lBQ2xDLE9BQU9oQixHQUFHLENBQUNpQixNQUFNLENBQUNOLFFBQVEsQ0FBQ00sTUFBTSxDQUFDLENBQUNELElBQUksQ0FBQ0QsSUFBSSxDQUFDLENBQUM7UUFDaEQsT0FBTyxJQUFJaEIsR0FBRyxDQUFDTSxNQUFNLEtBQUssTUFBTSxFQUFFO1lBQ2hDLHlDQUF5QztZQUN6QyxNQUFNTSxTQUFRLEdBQUcsTUFBTUMsS0FBSyxDQUFDLENBQUMsRUFBRVgsWUFBWSxDQUFDLFVBQVUsQ0FBQyxFQUFFO2dCQUN4REksTUFBTSxFQUFFLE1BQU07Z0JBQ2RRLE9BQU8sRUFBRTtvQkFDUCxjQUFjLEVBQUUsa0JBQWtCO29CQUNsQyxHQUFJZCxHQUFHLENBQUNjLE9BQU8sQ0FBQ0MsYUFBYSxHQUFHO3dCQUFFLGVBQWUsRUFBRWYsR0FBRyxDQUFDYyxPQUFPLENBQUNDLGFBQWE7cUJBQVksR0FBRyxFQUFFO2lCQUM5RjtnQkFDREksSUFBSSxFQUFFQyxJQUFJLENBQUNDLFNBQVMsQ0FBQ3JCLEdBQUcsQ0FBQ21CLElBQUksQ0FBQzthQUMvQixDQUFDO1lBRUYsTUFBTUgsS0FBSSxHQUFHLE1BQU1KLFNBQVEsQ0FBQ0ssSUFBSSxFQUFFO1lBQ2xDLE9BQU9oQixHQUFHLENBQUNpQixNQUFNLENBQUNOLFNBQVEsQ0FBQ00sTUFBTSxDQUFDLENBQUNELElBQUksQ0FBQ0QsS0FBSSxDQUFDLENBQUM7UUFDaEQsT0FBTztZQUNMZixHQUFHLENBQUNxQixTQUFTLENBQUMsT0FBTyxFQUFFO2dCQUFDLEtBQUs7Z0JBQUUsTUFBTTthQUFDLENBQUMsQ0FBQztZQUN4QyxPQUFPckIsR0FBRyxDQUFDaUIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDSyxHQUFHLENBQUMsQ0FBQyxPQUFPLEVBQUV2QixHQUFHLENBQUNNLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO1FBQ2pFLENBQUM7SUFDSCxFQUFFLE9BQU9rQixLQUFLLEVBQUU7UUFDZEMsT0FBTyxDQUFDRCxLQUFLLENBQUMsaUNBQWlDLEVBQUVBLEtBQUssQ0FBQyxDQUFDO1FBQ3hELE9BQU92QixHQUFHLENBQUNpQixNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNELElBQUksQ0FBQztZQUFFUyxPQUFPLEVBQUUseUNBQXlDO1NBQUUsQ0FBQyxDQUFDO0lBQ3RGLENBQUM7QUFDSCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXJwLXdlYi8uL3NyYy9wYWdlcy9hcGkvZW1wbG95ZWVzL2luZGV4LnRzP2ZkZmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBOZXh0QXBpUmVxdWVzdCwgTmV4dEFwaVJlc3BvbnNlIH0gZnJvbSAnbmV4dCc7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxOiBOZXh0QXBpUmVxdWVzdCwgcmVzOiBOZXh0QXBpUmVzcG9uc2UpIHtcbiAgdHJ5IHtcbiAgICAvLyBHZXQgdGhlIEFQSSBVUkwgZnJvbSBlbnZpcm9ubWVudCB2YXJpYWJsZSBvciB1c2UgZGVmYXVsdFxuICAgIGNvbnN0IG5lc3RKc0FwaVVybCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQSV9VUkwgfHwgJ2h0dHA6Ly9sb2NhbGhvc3Q6NDAwMC9hcGknO1xuICAgIFxuICAgIGlmIChyZXEubWV0aG9kID09PSAnR0VUJykge1xuICAgICAgLy8gRm9yd2FyZCB0aGUgR0VUIHJlcXVlc3QgdG8gTmVzdEpTIEFQSSB3aXRoIGFueSBxdWVyeSBwYXJhbXNcbiAgICAgIGNvbnN0IHF1ZXJ5U3RyaW5nID0gbmV3IFVSTFNlYXJjaFBhcmFtcyhyZXEucXVlcnkgYXMgUmVjb3JkPHN0cmluZywgc3RyaW5nPikudG9TdHJpbmcoKTtcbiAgICAgIGNvbnN0IGFwaVVybCA9IGAke25lc3RKc0FwaVVybH0vZW1wbG95ZWVzJHtxdWVyeVN0cmluZyA/IGA/JHtxdWVyeVN0cmluZ31gIDogJyd9YDtcbiAgICAgIFxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChhcGlVcmwsIHtcbiAgICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICAgLi4uKHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24gPyB7ICdBdXRob3JpemF0aW9uJzogcmVxLmhlYWRlcnMuYXV0aG9yaXphdGlvbiBhcyBzdHJpbmcgfSA6IHt9KVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKHJlc3BvbnNlLnN0YXR1cykuanNvbihkYXRhKTtcbiAgICB9IGVsc2UgaWYgKHJlcS5tZXRob2QgPT09ICdQT1NUJykge1xuICAgICAgLy8gRm9yd2FyZCB0aGUgUE9TVCByZXF1ZXN0IHRvIE5lc3RKUyBBUElcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7bmVzdEpzQXBpVXJsfS9lbXBsb3llZXNgLCB7XG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAuLi4ocmVxLmhlYWRlcnMuYXV0aG9yaXphdGlvbiA/IHsgJ0F1dGhvcml6YXRpb24nOiByZXEuaGVhZGVycy5hdXRob3JpemF0aW9uIGFzIHN0cmluZyB9IDoge30pXG4gICAgICAgIH0sXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHJlcS5ib2R5KVxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyhyZXNwb25zZS5zdGF0dXMpLmpzb24oZGF0YSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlcy5zZXRIZWFkZXIoJ0FsbG93JywgWydHRVQnLCAnUE9TVCddKTtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNSkuZW5kKGBNZXRob2QgJHtyZXEubWV0aG9kfSBOb3QgQWxsb3dlZGApO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjb25uZWN0aW5nIHRvIE5lc3RKUyBBUEk6JywgZXJyb3IpO1xuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IG1lc3NhZ2U6ICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3IgY29ubmVjdGluZyB0byBBUEknIH0pO1xuICB9XG59ICJdLCJuYW1lcyI6WyJoYW5kbGVyIiwicmVxIiwicmVzIiwibmVzdEpzQXBpVXJsIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0FQSV9VUkwiLCJtZXRob2QiLCJxdWVyeVN0cmluZyIsIlVSTFNlYXJjaFBhcmFtcyIsInF1ZXJ5IiwidG9TdHJpbmciLCJhcGlVcmwiLCJyZXNwb25zZSIsImZldGNoIiwiaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJkYXRhIiwianNvbiIsInN0YXR1cyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5Iiwic2V0SGVhZGVyIiwiZW5kIiwiZXJyb3IiLCJjb25zb2xlIiwibWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/employees/index.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./src/pages/api/employees/index.ts"));
module.exports = __webpack_exports__;

})();